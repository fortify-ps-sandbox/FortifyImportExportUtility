/*******************************************************************************
 * (c) Copyright 2020 Micro Focus or one of its affiliates
 *
 * Permission is hereby granted, free of charge, to any person obtaining a 
 * copy of this software and associated documentation files (the 
 * "Software"), to deal in the Software without restriction, including without 
 * limitation the rights to use, copy, modify, merge, publish, distribute, 
 * sublicense, and/or sell copies of the Software, and to permit persons to 
 * whom the Software is furnished to do so, subject to the following 
 * conditions:
 * 
 * The above copyright notice and this permission notice shall be included 
 * in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY 
 * KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 ******************************************************************************/
package com.fortify.impexp.from.ssc.vulnerability.loader.config;

import org.apache.commons.lang.StringUtils;

import com.fortify.client.ssc.api.query.builder.SSCApplicationVersionIssuesQueryBuilder;
import com.fortify.impexp.common.from.loader.config.LoaderEntityFilterQueryBuilderUpdater;
import com.fortify.util.rest.json.JSONList;
import com.fortify.util.rest.json.JSONMap;

public final class FromSSCVulnerabilityLoaderEntityFilterConfigQueryBuilderUpdater {
	public static final SSCApplicationVersionIssuesQueryBuilder updateQueryBuilder(SSCApplicationVersionIssuesQueryBuilder qb, FromSSCVulnerabilityLoaderEntityFilterConfig config, JSONMap releaseWithFilterSets) {
		return LoaderEntityFilterQueryBuilderUpdater.updateQueryBuilder(qb, config).
				paramFilterSetId(true, getFilterSetId(config, releaseWithFilterSets));
	}
	
	private static final String getFilterSetId(FromSSCVulnerabilityLoaderEntityFilterConfig config, JSONMap releaseWithFilterSets) {
		String filterSet = config.getFilterSet();
		String result = null;
		if ( StringUtils.isNotBlank(filterSet) ) {
			JSONList filterSets = releaseWithFilterSets.get("filterSets", JSONList.class);
			if ( filterSets==null ) {
				// TODO Load filter sets and add to release instead of throwing exception
				throw new IllegalStateException("Please add 'filterSets' to from.ssc.load.releases.includeSubEntities property");
			}
			result = filterSets.mapValue("title", filterSet, "guid", String.class);
			if ( result==null ) {
				result = filterSets.mapValue("guid", filterSet, "guid", String.class);
			}
			if ( result==null ) {
				throw new IllegalArgumentException("Unknown filter set name or id "+filterSet);
			}
		}
		
		return result;
	}
}
